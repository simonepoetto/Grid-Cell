from gtda.diagrams import PairwiseDistance
import numpy as np
import matplotlib.pyplot as plt

def distance_matrices(samples,metric, metric_params=None, ordn=2):
    pdist = PairwiseDistance(metric=metric,metric_params=metric_params, order=None, n_jobs=2)
    D = pdist.fit_transform(samples)
    scale = (D[:,:,0].max()-D[:,:,0].min())/(D[:,:,1].max()-D[:,:,1].min())
    Dscaled = np.stack((D[:,:,0],D[:,:,1]*scale),axis=2)
    Dn = np.linalg.norm(D,ord=ordn,axis=2)
    Dscaledn = np.linalg.norm(Dscaled, ord=ordn, axis=2)
    plt.figure(figsize=(10,5))
    plt.subplot(121)
    plt.imshow(Dn)
    plt.axis('off')
    plt.colorbar()
    plt.title('Not scaled, norm='+str(ordn)+'-norm')
    plt.subplot(122)
    plt.imshow(Dscaledn)
    plt.axis('off')
    plt.colorbar()
    plt.title('Scaled, norm='+str(ordn)+'-norm')
    plt.suptitle(metric)
    
def distance_matrices_ext(samples,metric, metric_params=None, ordn=2):
    pdist = PairwiseDistance(metric=metric,metric_params=metric_params, order=None, n_jobs=-1)
    D = pdist.fit_transform(samples)
    scale = (D[:,:,0].max()-D[:,:,0].min())/(D[:,:,1].max()-D[:,:,1].min())
    Dscaled = np.stack((D[:,:,0],D[:,:,1]*scale),axis=2)
    Dn = np.linalg.norm(D,ord=ordn,axis=2)
    Dscaledn = np.linalg.norm(Dscaled, ord=ordn, axis=2)
    plt.figure(figsize=(8,8))
    #plot H0 and H1 distances separated
    plt.subplot(221)
    plt.imshow(D[:,:,0])
    plt.axis('off')
    plt.colorbar(shrink=0.8)
    plt.title('H0')
    plt.subplot(222)
    plt.imshow(D[:,:,1])
    plt.axis('off')
    plt.colorbar(shrink=0.8)
    plt.title('H1')
    #plot complessive distance (whith or whithout scaling)
    plt.subplot(223)
    plt.imshow(Dn)
    plt.axis('off')
    plt.colorbar(shrink=0.8)
    plt.title('Not scaled, norm='+str(ordn)+'-norm')
    plt.subplot(224)
    plt.imshow(Dscaledn)
    plt.axis('off')
    plt.colorbar(shrink=0.8)
    plt.title('Scaled, norm='+str(ordn)+'-norm')
    plt.suptitle(metric)